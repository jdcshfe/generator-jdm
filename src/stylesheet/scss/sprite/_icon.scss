/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$015-name: '015';
$015-x: 68px;
$015-y: 0px;
$015-offset-x: -68px;
$015-offset-y: 0px;
$015-width: 55px;
$015-height: 61px;
$015-total-width: 123px;
$015-total-height: 92px;
$015-image: 'icon.png';
$015: (68px, 0px, -68px, 0px, 55px, 61px, 123px, 92px, 'icon.png', '015', );
$017-name: '017';
$017-x: 0px;
$017-y: 72px;
$017-offset-x: 0px;
$017-offset-y: -72px;
$017-width: 43px;
$017-height: 20px;
$017-total-width: 123px;
$017-total-height: 92px;
$017-image: 'icon.png';
$017: (0px, 72px, 0px, -72px, 43px, 20px, 123px, 92px, 'icon.png', '017', );
$018-name: '018';
$018-x: 48px;
$018-y: 72px;
$018-offset-x: -48px;
$018-offset-y: -72px;
$018-width: 43px;
$018-height: 20px;
$018-total-width: 123px;
$018-total-height: 92px;
$018-image: 'icon.png';
$018: (48px, 72px, -48px, -72px, 43px, 20px, 123px, 92px, 'icon.png', '018', );
$019-name: '019';
$019-x: 0px;
$019-y: 0px;
$019-offset-x: 0px;
$019-offset-y: 0px;
$019-width: 63px;
$019-height: 67px;
$019-total-width: 123px;
$019-total-height: 92px;
$019-image: 'icon.png';
$019: (0px, 0px, 0px, 0px, 63px, 67px, 123px, 92px, 'icon.png', '019', );
$015-2x-name: '015@2x';
$015-2x-x: 136px;
$015-2x-y: 0px;
$015-2x-offset-x: -136px;
$015-2x-offset-y: 0px;
$015-2x-width: 110px;
$015-2x-height: 122px;
$015-2x-total-width: 246px;
$015-2x-total-height: 184px;
$015-2x-image: 'icon@2x.png';
$015-2x: (136px, 0px, -136px, 0px, 110px, 122px, 246px, 184px, 'icon@2x.png', '015@2x', );
$017-2x-name: '017@2x';
$017-2x-x: 0px;
$017-2x-y: 144px;
$017-2x-offset-x: 0px;
$017-2x-offset-y: -144px;
$017-2x-width: 86px;
$017-2x-height: 40px;
$017-2x-total-width: 246px;
$017-2x-total-height: 184px;
$017-2x-image: 'icon@2x.png';
$017-2x: (0px, 144px, 0px, -144px, 86px, 40px, 246px, 184px, 'icon@2x.png', '017@2x', );
$018-2x-name: '018@2x';
$018-2x-x: 96px;
$018-2x-y: 144px;
$018-2x-offset-x: -96px;
$018-2x-offset-y: -144px;
$018-2x-width: 86px;
$018-2x-height: 40px;
$018-2x-total-width: 246px;
$018-2x-total-height: 184px;
$018-2x-image: 'icon@2x.png';
$018-2x: (96px, 144px, -96px, -144px, 86px, 40px, 246px, 184px, 'icon@2x.png', '018@2x', );
$019-2x-name: '019@2x';
$019-2x-x: 0px;
$019-2x-y: 0px;
$019-2x-offset-x: 0px;
$019-2x-offset-y: 0px;
$019-2x-width: 126px;
$019-2x-height: 134px;
$019-2x-total-width: 246px;
$019-2x-total-height: 184px;
$019-2x-image: 'icon@2x.png';
$019-2x: (0px, 0px, 0px, 0px, 126px, 134px, 246px, 184px, 'icon@2x.png', '019@2x', );
$spritesheet-width: 123px;
$spritesheet-height: 92px;
$spritesheet-image: 'icon.png';
$spritesheet-sprites: ($015, $017, $018, $019, );
$spritesheet: (123px, 92px, 'icon.png', $spritesheet-sprites, );
$retina-spritesheet-width: 246px;
$retina-spritesheet-height: 184px;
$retina-spritesheet-image: 'icon@2x.png';
$retina-spritesheet-sprites: ($015-2x, $017-2x, $018-2x, $019-2x, );
$retina-spritesheet: (246px, 184px, 'icon@2x.png', $retina-spritesheet-sprites, );

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
$015-group-name: '015';
$015-group: ('015', $015, $015-2x, );
$017-group-name: '017';
$017-group: ('017', $017, $017-2x, );
$018-group-name: '018';
$018-group: ('018', $018, $018-2x, );
$019-group-name: '019';
$019-group: ('019', $019, $019-2x, );
$retina-groups: ($015-group, $017-group, $018-group, $019-group, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
