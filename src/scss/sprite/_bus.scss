/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$bike-name: 'bike';
$bike-x: 0px;
$bike-y: 0px;
$bike-offset-x: 0px;
$bike-offset-y: 0px;
$bike-width: 36px;
$bike-height: 35px;
$bike-total-width: 112px;
$bike-total-height: 72px;
$bike-image: '../img/sprite/bus.png';
$bike: (0px, 0px, 0px, 0px, 36px, 35px, 112px, 72px, '../img/sprite/bus.png', 'bike', );
$bus-name: 'bus';
$bus-x: 38px;
$bus-y: 0px;
$bus-offset-x: -38px;
$bus-offset-y: 0px;
$bus-width: 36px;
$bus-height: 35px;
$bus-total-width: 112px;
$bus-total-height: 72px;
$bus-image: '../img/sprite/bus.png';
$bus: (38px, 0px, -38px, 0px, 36px, 35px, 112px, 72px, '../img/sprite/bus.png', 'bus', );
$car-name: 'car';
$car-x: 0px;
$car-y: 37px;
$car-offset-x: 0px;
$car-offset-y: -37px;
$car-width: 36px;
$car-height: 35px;
$car-total-width: 112px;
$car-total-height: 72px;
$car-image: '../img/sprite/bus.png';
$car: (0px, 37px, 0px, -37px, 36px, 35px, 112px, 72px, '../img/sprite/bus.png', 'car', );
$search-white-name: 'search-white';
$search-white-x: 76px;
$search-white-y: 37px;
$search-white-offset-x: -76px;
$search-white-offset-y: -37px;
$search-white-width: 14px;
$search-white-height: 16px;
$search-white-total-width: 112px;
$search-white-total-height: 72px;
$search-white-image: '../img/sprite/bus.png';
$search-white: (76px, 37px, -76px, -37px, 14px, 16px, 112px, 72px, '../img/sprite/bus.png', 'search-white', );
$user-name: 'user';
$user-x: 38px;
$user-y: 37px;
$user-offset-x: -38px;
$user-offset-y: -37px;
$user-width: 36px;
$user-height: 35px;
$user-total-width: 112px;
$user-total-height: 72px;
$user-image: '../img/sprite/bus.png';
$user: (38px, 37px, -38px, -37px, 36px, 35px, 112px, 72px, '../img/sprite/bus.png', 'user', );
$user2-name: 'user2';
$user2-x: 76px;
$user2-y: 0px;
$user2-offset-x: -76px;
$user2-offset-y: 0px;
$user2-width: 36px;
$user2-height: 35px;
$user2-total-width: 112px;
$user2-total-height: 72px;
$user2-image: '../img/sprite/bus.png';
$user2: (76px, 0px, -76px, 0px, 36px, 35px, 112px, 72px, '../img/sprite/bus.png', 'user2', );
$bike-2x-name: 'bike@2x';
$bike-2x-x: 0px;
$bike-2x-y: 0px;
$bike-2x-offset-x: 0px;
$bike-2x-offset-y: 0px;
$bike-2x-width: 72px;
$bike-2x-height: 70px;
$bike-2x-total-width: 224px;
$bike-2x-total-height: 144px;
$bike-2x-image: '../img/sprite/bus@2x.png';
$bike-2x: (0px, 0px, 0px, 0px, 72px, 70px, 224px, 144px, '../img/sprite/bus@2x.png', 'bike@2x', );
$bus-2x-name: 'bus@2x';
$bus-2x-x: 76px;
$bus-2x-y: 0px;
$bus-2x-offset-x: -76px;
$bus-2x-offset-y: 0px;
$bus-2x-width: 72px;
$bus-2x-height: 70px;
$bus-2x-total-width: 224px;
$bus-2x-total-height: 144px;
$bus-2x-image: '../img/sprite/bus@2x.png';
$bus-2x: (76px, 0px, -76px, 0px, 72px, 70px, 224px, 144px, '../img/sprite/bus@2x.png', 'bus@2x', );
$car-2x-name: 'car@2x';
$car-2x-x: 0px;
$car-2x-y: 74px;
$car-2x-offset-x: 0px;
$car-2x-offset-y: -74px;
$car-2x-width: 72px;
$car-2x-height: 70px;
$car-2x-total-width: 224px;
$car-2x-total-height: 144px;
$car-2x-image: '../img/sprite/bus@2x.png';
$car-2x: (0px, 74px, 0px, -74px, 72px, 70px, 224px, 144px, '../img/sprite/bus@2x.png', 'car@2x', );
$search-white-2x-name: 'search-white@2x';
$search-white-2x-x: 152px;
$search-white-2x-y: 74px;
$search-white-2x-offset-x: -152px;
$search-white-2x-offset-y: -74px;
$search-white-2x-width: 28px;
$search-white-2x-height: 32px;
$search-white-2x-total-width: 224px;
$search-white-2x-total-height: 144px;
$search-white-2x-image: '../img/sprite/bus@2x.png';
$search-white-2x: (152px, 74px, -152px, -74px, 28px, 32px, 224px, 144px, '../img/sprite/bus@2x.png', 'search-white@2x', );
$user2-2x-name: 'user2@2x';
$user2-2x-x: 76px;
$user2-2x-y: 74px;
$user2-2x-offset-x: -76px;
$user2-2x-offset-y: -74px;
$user2-2x-width: 72px;
$user2-2x-height: 70px;
$user2-2x-total-width: 224px;
$user2-2x-total-height: 144px;
$user2-2x-image: '../img/sprite/bus@2x.png';
$user2-2x: (76px, 74px, -76px, -74px, 72px, 70px, 224px, 144px, '../img/sprite/bus@2x.png', 'user2@2x', );
$user-2x-name: 'user@2x';
$user-2x-x: 152px;
$user-2x-y: 0px;
$user-2x-offset-x: -152px;
$user-2x-offset-y: 0px;
$user-2x-width: 72px;
$user-2x-height: 70px;
$user-2x-total-width: 224px;
$user-2x-total-height: 144px;
$user-2x-image: '../img/sprite/bus@2x.png';
$user-2x: (152px, 0px, -152px, 0px, 72px, 70px, 224px, 144px, '../img/sprite/bus@2x.png', 'user@2x', );
$spritesheet-width: 112px;
$spritesheet-height: 72px;
$spritesheet-image: '../img/sprite/bus.png';
$spritesheet-sprites: ($bike, $bus, $car, $search-white, $user, $user2, );
$spritesheet: (112px, 72px, '../img/sprite/bus.png', $spritesheet-sprites, );
$retina-spritesheet-width: 224px;
$retina-spritesheet-height: 144px;
$retina-spritesheet-image: '../img/sprite/bus@2x.png';
$retina-spritesheet-sprites: ($bike-2x, $bus-2x, $car-2x, $search-white-2x, $user2-2x, $user-2x, );
$retina-spritesheet: (224px, 144px, '../img/sprite/bus@2x.png', $retina-spritesheet-sprites, );

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
$bike-group-name: 'bike';
$bike-group: ('bike', $bike, $bike-2x, );
$bus-group-name: 'bus';
$bus-group: ('bus', $bus, $bus-2x, );
$car-group-name: 'car';
$car-group: ('car', $car, $car-2x, );
$search-white-group-name: 'search-white';
$search-white-group: ('search-white', $search-white, $search-white-2x, );
$user-group-name: 'user';
$user-group: ('user', $user, $user2-2x, );
$user2-group-name: 'user2';
$user2-group: ('user2', $user2, $user-2x, );
$retina-groups: ($bike-group, $bus-group, $car-group, $search-white-group, $user-group, $user2-group, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
